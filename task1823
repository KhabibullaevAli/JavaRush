package com.javarush.task.task18.task1823;

import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;

/* 
Нити и байты
*/

public class Solution {
    public static Map<String, Integer> resultMap = new HashMap<String, Integer>();

    public static void main(String[] args) {
        BufferedReader br=new BufferedReader(new InputStreamReader(System.in));

        try {
            String file1;
            do {
                file1 = br.readLine();

                if (!file1.equals("exit")){(new ReadThread(file1)).start();}
            } while (!file1.equals("exit")); br.close();
        } catch(Exception e){ }

        try{Thread.sleep(1000);} catch (Exception e){}
//        System.out.println(resultMap);

    }

    public static class ReadThread extends Thread {
        private String name;

        public ReadThread(String fileName) {
            this.name = fileName;
        }


        public void run()
        { TreeMap<String, Integer> threadMap= new TreeMap<>();
        try {FileInputStream fi = new FileInputStream(name);
            while (fi.available()>0)  {int s=fi.read(); String sym =String.valueOf(s);
                if (!threadMap.containsKey(sym)){threadMap.put(sym, 1);} else {threadMap.put(sym, threadMap.get(sym)+1);}
            }
            fi.close();
            String max=threadMap.firstKey();
            for(Map.Entry<String, Integer> entry : threadMap.entrySet()) {
//                String key = entry.getKey();
                Integer value = entry.getValue();
                if (value>threadMap.get(max))max=entry.getKey();
            }
//            System.out.println(max + " - " + threadMap.get(max));
            synchronized (resultMap){resultMap.put(name, Integer.parseInt(max));}

        } catch (Exception e){}
        }
    }
}
